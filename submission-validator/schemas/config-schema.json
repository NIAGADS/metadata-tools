{
    "$ref": "#/definitions/sheet",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "field": {
            "additionalProperties": false,
            "description": "Metadata File Field Specification",
            "properties": {
                "name": {
                    "description": "name of metadata field",
                    "title": "name",
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "description": "flag indicating whether the field is required",
                    "title": "required",
                    "type": "boolean"
                },
                "type": {
                    "default": "string",
                    "description": "data type of the field;",
                    "title": "type",
                    "type": "string"
                },
                "validator": {
                    "description": "list of field validators",
                    "items": {
                        "$ref": "#/definitions/validator"
                    },
                    "title": "validator",
                    "type": "array"
                }
            },
            "required": [
                "name"
            ],
            "title": "field",
            "type": "object"
        },
        "pattern_type": {
            "enum": [
                "URL",
                "custom",
                "email",
                "publication"
            ],
            "title": "pattern_type",
            "type": "string"
        },
        "sheet": {
            "additionalProperties": false,
            "description": "Metadata File (Sheet) Validator Configuration",
            "properties": {
                "allow_user_fields": {
                    "default": false,
                    "description": "flag indicating whether user-defined fields are allowed",
                    "title": "allow_user_fields",
                    "type": "boolean"
                },
                "extends": {
                    "description": "to support inheritence; parent sheet type (e.g., `rnaseq_assay` extends `sequencing_assay`)",
                    "title": "extends",
                    "type": "string"
                },
                "fields": {
                    "description": "list of expected fields in the sheet",
                    "items": {
                        "$ref": "#/definitions/field"
                    },
                    "minItems": 1,
                    "title": "fields",
                    "type": "array",
                    "uniqueItems": true
                },
                "omit_fields": {
                    "description": "to support inheritence; any fields from the parent that should be omitted (ignored)",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "title": "omit_fields",
                    "type": "array",
                    "uniqueItems": true
                },
                "sheet_name": {
                    "description": "name of the sheet",
                    "title": "sheet_name",
                    "type": "string"
                }
            },
            "required": [
                "fields"
            ],
            "title": "sheet",
            "type": "object"
        },
        "test": {
            "additionalProperties": false,
            "description": "Details about a depends_on (test-involving) validation",
            "properties": {
                "field": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "the field(s) on which the validation is dependent; assumes same sheet if `sheet` is not supplied",
                    "title": "field"
                },
                "sheet": {
                    "description": "sheet name if not same as field being validated",
                    "title": "sheet",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/test_type",
                    "description": "the type of the test",
                    "title": "type"
                },
                "value": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number",
                                "boolean"
                            ]
                        }
                    ],
                    "description": "field value(s) on which dependency is conditioned; Y/N should be specified as boolean",
                    "title": "value"
                },
                "warn_if_fail": {
                    "default": false,
                    "description": "flag indicating whether a warning instead of an error should be provided if the test fails",
                    "title": "warn_if_fail",
                    "type": "boolean"
                }
            },
            "required": [
                "field",
                "type"
            ],
            "title": "test",
            "type": "object"
        },
        "test_type": {
            "enum": [
                "all_fields_exist",
                "any_fields_exist",
                "value_exists",
                "value_matches"
            ],
            "title": "test_type",
            "type": "string"
        },
        "validator": {
            "additionalProperties": false,
            "description": "Validator specification; validators can be provided for fields or sheets",
            "properties": {
                "message": {
                    "description": "message if validation fails or warning conditions are met",
                    "title": "message",
                    "type": "string"
                },
                "options": {
                    "$ref": "#/definitions/validator_options",
                    "description": "options for the validator",
                    "title": "options"
                },
                "type": {
                    "$ref": "#/definitions/validator_type",
                    "description": "type of validator",
                    "title": "type"
                },
                "value": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "validator value (may be a list of items or a test)",
                    "minItems": 1,
                    "title": "value",
                    "uniqueItems": true
                }
            },
            "required": [
                "type"
            ],
            "title": "validator",
            "type": "object"
        },
        "validator_options": {
            "additionalProperties": false,
            "description": "Validator options",
            "properties": {
                "allow_user_terms": {
                    "default": false,
                    "description": "allow free text; for data dictionary validation",
                    "title": "allow_user_terms",
                    "type": "boolean"
                },
                "comment": {
                    "description": "catch all to allow additional comments or qualifiersoptions for now, but still allow schema validation by not allowing additionalProperties",
                    "title": "comment",
                    "type": "string"
                },
                "pattern": {
                    "$ref": "#/definitions/pattern_type",
                    "description": "regexp pattern type; for custom pattern specifiy `custom` and then provide\nthe actual pattern in the \"other\"",
                    "title": "pattern"
                },
                "test": {
                    "$ref": "#/definitions/test",
                    "description": "if depends on is specified, provide type of dependency test",
                    "title": "test"
                }
            },
            "title": "validator_options",
            "type": "object"
        },
        "validator_type": {
            "enum": [
                "age",
                "data_dictionary",
                "delimiter",
                "dependency",
                "list",
                "regexp",
                "requires",
                "units",
                "warn_if_missing"
            ],
            "title": "validator_type",
            "type": "string"
        }
    }
}

